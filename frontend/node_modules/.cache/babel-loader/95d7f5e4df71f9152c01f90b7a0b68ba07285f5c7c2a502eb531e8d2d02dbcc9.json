{"ast":null,"code":"var _jsxFileName = \"G:\\\\PROJECT_TWO\\\\UDEMY\\\\react-router-tutorial-two\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport Homepage from \"./pages/Homepage\";\nimport EventPage, { loader as eventPageLoader } from \"./pages/Eventpage\";\nimport EventDetailPage, { loader as eventDetailLoader, action as deleteEventAction } from \"./pages/EventDetailPage\";\nimport NewEventPage, { action as newPageAction } from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport Layout from \"./layout/layout\";\nimport EventLayout from \"./layout/eventlayout\";\nimport ErrorPage from \"./pages/ErrorPage\";\nimport { action as manipuleFormAction } from \"./components/EventForm\";\nimport NewsletterPage, { action as newsletterAction } from \"./pages/NewsLetterPage\";\nimport AuthenticationPage, { action as authAction } from \"./pages/Authentication\";\nimport { action as logoutAction } from \"./pages/Logout\";\nimport { loaderToken } from \"./util/gettoken\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 19\n  }, this),\n  loader: loaderToken,\n  id: \"root\",\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 31\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 22\n      }, this),\n      loader: eventPageLoader\n      // loader: async () => {\n      //   //  the user of loader\n      //   const response = await fetch(\"http://localhost:8080/events\");\n\n      //   if (!response.ok) {\n      //   } else {\n      //     const resData = await response.json();\n      //     return resData.events;\n      //   }\n      // },\n    }, {\n      path: \":singleID\",\n      // the use of useRouterLoaderData\n      id: \"event-details\",\n      loader: eventDetailLoader,\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 26\n        }, this),\n        action: deleteEventAction\n      }, {\n        path: \"edit\",\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 26\n        }, this),\n        action: manipuleFormAction\n      }]\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 22\n      }, this),\n      action: manipuleFormAction\n    }]\n  }, {\n    path: \"auth\",\n    element: /*#__PURE__*/_jsxDEV(AuthenticationPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 18\n    }, this),\n    action: authAction\n  }, {\n    path: \"logout\",\n    action: logoutAction\n  }, {\n    path: \"newsletter\",\n    element: /*#__PURE__*/_jsxDEV(NewsletterPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 18\n    }, this),\n    action: newsletterAction\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","Homepage","EventPage","loader","eventPageLoader","EventDetailPage","eventDetailLoader","action","deleteEventAction","NewEventPage","newPageAction","EditEventPage","Layout","EventLayout","ErrorPage","manipuleFormAction","NewsletterPage","newsletterAction","AuthenticationPage","authAction","logoutAction","loaderToken","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","id","children","index","App","_c","$RefreshReg$"],"sources":["G:/PROJECT_TWO/UDEMY/react-router-tutorial-two/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport Homepage from \"./pages/Homepage\";\nimport EventPage, { loader as eventPageLoader } from \"./pages/Eventpage\";\nimport EventDetailPage, {\n  loader as eventDetailLoader,\n  action as deleteEventAction,\n} from \"./pages/EventDetailPage\";\nimport NewEventPage, { action as newPageAction } from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport Layout from \"./layout/layout\";\nimport EventLayout from \"./layout/eventlayout\";\nimport ErrorPage from \"./pages/ErrorPage\";\nimport { action as manipuleFormAction } from \"./components/EventForm\";\nimport NewsletterPage, {\n  action as newsletterAction,\n} from \"./pages/NewsLetterPage\";\nimport AuthenticationPage, {\n  action as authAction,\n} from \"./pages/Authentication\";\nimport { action as logoutAction } from \"./pages/Logout\";\nimport { loaderToken } from \"./util/gettoken\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <Layout />,\n    errorElement: <ErrorPage />,\n    loader: loaderToken,\n    id: \"root\",\n    children: [\n      { index: true, element: <Homepage /> },\n      {\n        path: \"events\",\n        element: <EventLayout />,\n        children: [\n          {\n            index: true,\n            element: <EventPage />,\n            loader: eventPageLoader,\n            // loader: async () => {\n            //   //  the user of loader\n            //   const response = await fetch(\"http://localhost:8080/events\");\n\n            //   if (!response.ok) {\n            //   } else {\n            //     const resData = await response.json();\n            //     return resData.events;\n            //   }\n            // },\n          },\n          {\n            path: \":singleID\",\n            // the use of useRouterLoaderData\n            id: \"event-details\",\n            loader: eventDetailLoader,\n            children: [\n              {\n                index: true,\n                element: <EventDetailPage />,\n                action: deleteEventAction,\n              },\n              {\n                path: \"edit\",\n                element: <EditEventPage />,\n                action: manipuleFormAction,\n              },\n            ],\n          },\n\n          {\n            path: \"new\",\n            element: <NewEventPage />,\n            action: manipuleFormAction,\n          },\n        ],\n      },\n      {\n        path: \"auth\",\n        element: <AuthenticationPage />,\n        action: authAction,\n      },\n      {\n        path: \"logout\",\n        action: logoutAction,\n      },\n      {\n        path: \"newsletter\",\n        element: <NewsletterPage />,\n        action: newsletterAction,\n      },\n    ],\n  },\n]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}