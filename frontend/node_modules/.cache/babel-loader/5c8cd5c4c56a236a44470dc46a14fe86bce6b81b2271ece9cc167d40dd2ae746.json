{"ast":null,"code":"var _jsxFileName = \"G:\\\\PROJECT_TWO\\\\UDEMY\\\\react-router-tutorial-two\\\\frontend\\\\src\\\\pages\\\\Eventpage.jsx\";\n// import { Link } from \"react-router-dom\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// const EventPage = () => {\n//   const events = [\n//     { id: uuidv4(), title: \"soap\" },\n//     { id: uuidv4(), title: \"frontEnd\" },\n//     { id: uuidv4(), title: \"BackEnd\" },\n//     { id: uuidv4(), title: \"fullstack\" },\n//     { id: uuidv4(), title: \"data scientist\" },\n//   ];\n//   return (\n//     <>\n//       <h4>Event Details Page</h4>\n//       <p>\n//         Lorem ipsum dolor sit amet consectetur adipisicing elit. Ducimus, veniam\n//         accusantium officiis laudantium aliquam pariatur error fugit corrupti\n//         inventore tempora. Minima porro nemo et distinctio sunt, doloribus\n//         quidem ad eaque!\n//       </p>\n\n//       <main>\n//         <ul>\n//           {events.map((eventItems) => (\n//             <li key={eventItems.id}>\n//               <Link to={eventItems.id}>{eventItems.title}</Link>\n//             </li>\n//           ))}\n//         </ul>\n//       </main>\n//     </>\n//   );\n// };\n\n// export default EventPage;\n\nimport { useEffect, useState } from \"react\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [fetchedEvents, setFetchedEvents] = useState();\n  // const [error, setError] = useState();\n\n  // useEffect(() => {\n  //   async function fetchEvents() {\n  //     setIsLoading(true);\n  //     const response = await fetch(\"http://localhost:8080/events\");\n  //     if (!response.ok) {\n  //       setError(\"Fetching events failed.\");\n  //     } else {\n  //       const resData = await response.json();\n  //       setFetchedEvents(resData.events);\n  //     }\n  //     setIsLoading(false);\n  //   }\n  //   fetchEvents();\n  //   the use of loader\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: fetchedEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useEffect","useState","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","children","events","fetchedEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/PROJECT_TWO/UDEMY/react-router-tutorial-two/frontend/src/pages/Eventpage.jsx"],"sourcesContent":["// import { Link } from \"react-router-dom\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n\r\n// const EventPage = () => {\r\n//   const events = [\r\n//     { id: uuidv4(), title: \"soap\" },\r\n//     { id: uuidv4(), title: \"frontEnd\" },\r\n//     { id: uuidv4(), title: \"BackEnd\" },\r\n//     { id: uuidv4(), title: \"fullstack\" },\r\n//     { id: uuidv4(), title: \"data scientist\" },\r\n//   ];\r\n//   return (\r\n//     <>\r\n//       <h4>Event Details Page</h4>\r\n//       <p>\r\n//         Lorem ipsum dolor sit amet consectetur adipisicing elit. Ducimus, veniam\r\n//         accusantium officiis laudantium aliquam pariatur error fugit corrupti\r\n//         inventore tempora. Minima porro nemo et distinctio sunt, doloribus\r\n//         quidem ad eaque!\r\n//       </p>\r\n\r\n//       <main>\r\n//         <ul>\r\n//           {events.map((eventItems) => (\r\n//             <li key={eventItems.id}>\r\n//               <Link to={eventItems.id}>{eventItems.title}</Link>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </main>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default EventPage;\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventsPage() {\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n  // const [fetchedEvents, setFetchedEvents] = useState();\r\n  // const [error, setError] = useState();\r\n\r\n  // useEffect(() => {\r\n  //   async function fetchEvents() {\r\n  //     setIsLoading(true);\r\n  //     const response = await fetch(\"http://localhost:8080/events\");\r\n  //     if (!response.ok) {\r\n  //       setError(\"Fetching events failed.\");\r\n  //     } else {\r\n  //       const resData = await response.json();\r\n  //       setFetchedEvents(resData.events);\r\n  //     }\r\n  //     setIsLoading(false);\r\n  //   }\r\n  //   fetchEvents();\r\n  //   the use of loader\r\n  // }, []);\r\n  return (\r\n    <>\r\n      {/* <div style={{ textAlign: \"center\" }}>\r\n        {isLoading && <p>Loading...</p>}\r\n        {error && <p>{error}</p>}\r\n      </div>\r\n      {!isLoading && fetchedEvents && <EventsList events={fetchedEvents} />} */}\r\n      <EventsList events={fetchedEvents} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EACpB;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eAMEJ,OAAA,CAACF,UAAU;MAACO,MAAM,EAAEC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACrC,CAAC;AAEP;AAACC,EAAA,GA9BQR,UAAU;AAgCnB,eAAeA,UAAU;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}