{"ast":null,"code":"var _jsxFileName = \"G:\\\\PROJECT_TWO\\\\UDEMY\\\\react-router-tutorial-two\\\\frontend\\\\src\\\\pages\\\\NewEventPage.jsx\";\nimport { json, redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const action = async ({\n  request,\n  params\n}) => {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (respose.status === 422) {\n    return resp;\n  }\n  if (!respose.ok) {\n    throw json({\n      message: \"Could submit the data\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n};\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = NewEventPage;\nexport default NewEventPage;\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","redirect","EventForm","jsxDEV","_jsxDEV","Fragment","_Fragment","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","respose","status","resp","ok","message","NewEventPage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/PROJECT_TWO/UDEMY/react-router-tutorial-two/frontend/src/pages/NewEventPage.jsx"],"sourcesContent":["import { json, redirect } from \"react-router-dom\";\r\nimport EventForm from \"../components/EventForm\";\r\n\r\nexport const action = async ({ request, params }) => {\r\n  const data = await request.formData();\r\n\r\n  const eventData = {\r\n    title: data.get(\"title\"),\r\n    image: data.get(\"image\"),\r\n    date: data.get(\"date\"),\r\n    description: data.get(\"description\"),\r\n  };\r\n\r\n  const response = await fetch(\"http://localhost:8080/events\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(eventData),\r\n  });\r\n\r\n  if (respose.status === 422) {\r\n    return resp;\r\n  }\r\n\r\n  if (!respose.ok) {\r\n    throw json({ message: \"Could submit the data\" }, { status: 500 });\r\n  }\r\n\r\n  return redirect(\"/events\");\r\n};\r\n\r\nconst NewEventPage = () => {\r\n  return (\r\n    <>\r\n      <EventForm />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewEventPage;\r\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAO;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EACnD,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC3DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAChC,CAAC,CAAC;EAEF,IAAIa,OAAO,CAACC,MAAM,KAAK,GAAG,EAAE;IAC1B,OAAOC,IAAI;EACb;EAEA,IAAI,CAACF,OAAO,CAACG,EAAE,EAAE;IACf,MAAM5B,IAAI,CAAC;MAAE6B,OAAO,EAAE;IAAwB,CAAC,EAAE;MAAEH,MAAM,EAAE;IAAI,CAAC,CAAC;EACnE;EAEA,OAAOzB,QAAQ,CAAC,SAAS,CAAC;AAC5B,CAAC;AAED,MAAM6B,YAAY,GAAGA,CAAA,KAAM;EACzB,oBACE1B,OAAA,CAAAE,SAAA;IAAAyB,QAAA,eACE3B,OAAA,CAACF,SAAS;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACb,CAAC;AAEP,CAAC;AAACC,EAAA,GANIN,YAAY;AAQlB,eAAeA,YAAY;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}